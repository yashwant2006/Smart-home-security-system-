import face_recognition
import cv2
import numpy as np
import RPi.GPIO as GPIO
import time

# Servo GPIO Setup
SERVO_PIN = 18
GPIO.setmode(GPIO.BCM)
GPIO.setup(SERVO_PIN, GPIO.OUT)
servo_pwm = GPIO.PWM(SERVO_PIN, 50)  # 50Hz for servo
servo_pwm.start(0)

# Function to rotate servo
def unlock_servo():
    print("Known face detected! Activating servo...")
    servo_pwm.ChangeDutyCycle(7.5)  # 90 degrees
    time.sleep(1)
    servo_pwm.ChangeDutyCycle(2.5)  # 0 degrees (lock again)
    time.sleep(1)
    servo_pwm.ChangeDutyCycle(0)

# Load a sample picture and learn how to recognize it.
known_image = face_recognition.load_image_file("known_face.jpg")  # your known face image
known_encoding = face_recognition.face_encodings(known_image)[0]

known_face_encodings = [known_encoding]
known_face_names = ["Authorized Person"]

# Initialize camera
video_capture = cv2.VideoCapture(0)

try:
    while True:
        ret, frame = video_capture.read()
        if not ret:
            continue

        # Resize frame for faster processing
        small_frame = cv2.resize(frame, (0, 0), fx=0.25, fy=0.25)
        rgb_small_frame = small_frame[:, :, ::-1]

        # Find all face locations and encodings
        face_locations = face_recognition.face_locations(rgb_small_frame)
        face_encodings = face_recognition.face_encodings(rgb_small_frame, face_locations)

        for face_encoding in face_encodings:
            matches = face_recognition.compare_faces(known_face_encodings, face_encoding)
            face_distances = face_recognition.face_distance(known_face_encodings, face_encoding)
            best_match_index = np.argmin(face_distances)

            if matches[best_match_index]:
                name = known_face_names[best_match_index]
                unlock_servo()
            else:
                print("Unknown face")

        # Show preview (optional)
        cv2.imshow('Video', frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

finally:
    print("Cleaning up...")
    video_capture.release()
    cv2.destroyAllWindows()
    servo_pwm.stop()
    GPIO.cleanup()
